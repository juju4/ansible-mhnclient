---

- name: MHN Client | registration
  include: registration.yml honeypot=glastopf
- set_fact:
    deploy: /root/.registration_done-glastopf

- name: Extract HPF_HOST from server_url
  shell: |
    set -o pipefail
    echo {{ server_url }} | sed 's#^http://##; s#^https://##; s#/.*$##; s/:.*$//'
  args:
    executable: /bin/bash
  register: HPF_HOST
  changed_when: False
- name: Set fact HPF_PORT
  set_fact:
    HPF_PORT: 10000
- name: retrieve HPF_IDENT from registration file
  shell: "python -c 'import json;obj=json.load(file(\"{{ deploy }}\"));print obj[\"identifier\"]'"
  register: HPF_IDENT
  changed_when: False
- name: retrieve HPF_SECRET from registration file
  shell: "python -c 'import json;obj=json.load(file(\"{{ deploy }}\"));print obj[\"secret\"]'"
  register: HPF_SECRET
  changed_when: False
  no_log: true

- name: Ensure python-pip is present
  package:
    name: python-pip
    state: present

- name: Glastopf | Ensure recent pyopenssl
  pip:
    name: pyopenssl
    state: present

- name: Install glastopf dependencies
  package: name={{ mhnclient_glastopf_pkg + [ mongodb_pkg ] }} state=present

### Note: may conflict w release for other modules: contop, snort
#- stat: path=/usr/local/lib/python2.7/dist-packages/distribute-0.6.35-py2.7.egg
#  register: distribute
#- name: download distribute python
#  get_url: url=https://pypi.python.org/packages/source/d/distribute/distribute-0.6.35.tar.gz dest=/tmp/distribute-0.6.35.tar.gz mode=0440
#  when: not distribute.stat.exists
#- name: extract distribute
##  command: "tar xzf /tmp/distribute-0.6.35.tar.gz -C /tmp/"
#  unarchive: src=/tmp/distribute-0.6.35.tar.gz dest=/tmp
#  when: not distribute.stat.exists
#- command: "python setup.py install chdir=/tmp/distribute-0.6.35"
#  when: not distribute.stat.exists

- name: install hpfeeds from github
  pip: name="git+https://github.com/threatstream/hpfeeds.git#egg=hpfeeds-dev"

- stat: path=/opt/BFR
  register: bfrdir
- name: git clone glastopf
  git:
    repo=https://github.com/mushorg/BFR.git
    dest=/opt/BFR
  when: not bfrdir.stat.exists
- name: configure, build and install BFR
  command: "{{ item.c }} chdir=/opt/BFR creates={{ item.f }}"
  with_items:
    - { c: phpize, f: 'configure' }
    - { c: "./configure --enable-bfr", f: 'Makefile' }
    - { c: make, f: /opt/BFR/modules/bfr.so }
    - { c: "make install", f: "/usr/lib/{{ php_dir }}/20151012/bfr.so" }

- name: get bfr.so path
  shell: "find /usr/lib/{{ php_dir }}/ -type f -name bfr.so | awk -F'/' '{print $5}'"
  register: BFR_BUILD_OUTPUT
  changed_when: false

- fail: msg="FATAL! fail to locate bfr.so in /usr/lib"
  when: BFR_BUILD_OUTPUT.stdout is not defined or BFR_BUILD_OUTPUT.stdout == ''

- name: ensure php bfr.so is enabled in php.ini
  lineinfile: "dest={{ item }} regexp='^zend_extension = /usr/lib/{{ php_dir }}/{{ BFR_BUILD_OUTPUT.stdout }}/bfr.so' line='zend_extension = /usr/lib/{{ php_dir }}/{{ BFR_BUILD_OUTPUT.stdout }}/bfr.so'"
  with_items: "{{Â php_ini_files }}"

- name: stop/disable apache2 service
  service: name=apache2 state=stopped enabled=no
  ignore_errors: true

- name: install greenlet dependencies with pip
  command: "pip install --upgrade greenlet"
  when: ansible_distribution_release != 'xenial'

- name: install dependencies with pip
  command: "pip install --upgrade {{ item }}"
  with_items:
    - pgen
    - cython

#- name: install glastopf
#  pip: name=glastopf
- stat: path=/opt/glastopf
  register: gtdir
- name: git clone glastopf
  git:
    repo: https://github.com/mushorg/glastopf.git
    dest: /opt/glastopf
    version: "{{ glastopf_version | default('HEAD') }}"
  when: not gtdir.stat.exists

# Official = legacy, https://pypi.org/project/distribute/
# https://github.com/fictorial/pygameui/issues/5
# https://mail.python.org/pipermail/distutils-sig/2017-October/031712.html
- name: patch distribute DEFAULT_*
  replace:
   dest: /opt/glastopf/distribute_setup.py
   regexp: "{{ item.re }}"
   replace: "{{ item.rep }}"
  when: ansible_distribution_release == 'xenial'
  with_items:
    - { re: '^DEFAULT_VERSION = .*', rep: 'DEFAULT_VERSION = "0.7.3"' }
    - { re: '^DEFAULT_URL = "http://pypi.python.org', rep: 'DEFAULT_URL = "https://pypi.python.org' }

- name: install glastop pip requirements
  pip:
    requirements: /opt/glastopf/requirements.txt

- name: build and install glastopf
  command: "python setup.py install chdir=/opt/glastopf"

- name: ensure good permissions on /opt/glastopf
  file: path=/opt/glastopf state=directory mode=0755

- name: set glastopf configuration
  template: src=glastopf.cfg.j2 dest=/opt/glastopf/glastopf.cfg mode=0644
  notify:
    - supervisor update

- name: set glastopf supervisor config
  template: "src=glastopf.conf.j2 dest={{ supervisor_confdir }}/glastopf.{{ supervisor_ext }} mode=0644"
  notify:
    - supervisor update
