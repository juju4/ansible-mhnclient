---

- name: MHN Client | registration
  include: registration.yml honeypot=amun
- set_fact:
    deploy: /root/.registration_done-amun

- name: Extract HPF_HOST from server_url
  shell: |
    set -o pipefail
    echo {{ server_url }} | sed 's#^http://##; s#^https://##; s#/.*$##; s/:.*$//'
  args:
    executable: /bin/bash
  register: HPF_HOST
  changed_when: False
- name: Set fact HPF_PORT
  set_fact:
    HPF_PORT: 10000
- name: retrieve HPF_IDENT from registration file
  shell: "python -c 'import json;obj=json.load(file(\"{{ deploy }}\"));print obj[\"identifier\"]'"
  register: HPF_IDENT
  changed_when: False
- name: retrieve HPF_SECRET from registration file
  shell: "python -c 'import json;obj=json.load(file(\"{{ deploy }}\"));print obj[\"secret\"]'"
  register: HPF_SECRET
  changed_when: False
  no_log: true

- name: Ubuntu | Install amun dependencies
  apt:
    name:
      - git
      - supervisor
      - python-pip
    state: present
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == 'Debian' or ansible_distribution == 'Kali'

- name: yum | Install amun dependencies
  yum:
    name:
      - git
      - supervisor
      - python-pip
    state: present
    update_cache: yes
  when: ansible_os_family == "RedHat"

- stat: path=/opt/amun
  register: amundir
- name: git clone amun
  git:
    repo=https://github.com/zeroq/amun.git
    dest=/opt/amun
    version=development
  when: not amundir.stat.exists

## Alternative: ansible module yaml-edit: https://github.com/kwoodson/yedit
- name: review amun.conf - replace
  replace: "dest=/opt/amun/conf/amun.conf regexp='{{ item.regexp }}' replace='{{ item.replace }}' backup=yes"
  with_items:
    - { regexp: 'ip: 127.0.0.1', replace: 'ip: 0.0.0.0' }
    - { regexp: '    vuln-http,', replace: "#   vuln-http," }
  notify:
    - supervisor update
- name: review amun.conf - lineinfile
  lineinfile: "dest=/opt/amun/conf/amun.conf line='    log-hpfeeds' insertafter='^log_modules:' backup=yes"
  notify:
    - supervisor update

- name: Ensure Amun hexdumps directory exists
  file: path=/opt/amun/hexdumps state=directory mode=0755

- block:
    - name: increase current ulimit settings
      command: "{{ item }}"
      with_items:
        - 'ulimit -Hn 104854'
        - 'ulimit -n 104854'

    - name: increase sysctl file-max limit
      sysctl: name="fs.file-max" value=104854 sysctl_set=yes state=present reload=yes
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        )

- name: set amun hpfeeds config
  template: src=log-hpfeeds.conf.j2 dest=/opt/amun/conf/log-hpfeeds.conf mode=0644
  notify:
    - supervisor update

- name: set amun supervisor config
  template: "src=amun.conf.j2 dest={{ supervisor_confdir }}/amun.{{ supervisor_ext }} mode=0644"
  notify:
    - supervisor update
